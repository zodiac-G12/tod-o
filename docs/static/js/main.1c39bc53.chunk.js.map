{"version":3,"sources":["sea-lion.svg","modules/sampleTodoData.tsx","components/atoms/TodoIcon.tsx","components/pages/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","sampleTodoData","id","category","locale","title","description","dead_line","Date","setDate","getDate","toLocaleString","split","map","block","idx","s","length","join","degree","project_id","completeness","created","TodoIcon","props","style","height","width","src","svg","alt","TitleInput","styled","input","DescriptionInput","textarea","MatrixCrown","div","NumEye","Flex","Flexy","Crown","Centerizer","Title","Container","Matrix","App","window","navigator","language","todoDatas","localStorage","JSON","parse","useState","list","setList","choiced","setChoice","saveList","key","value","pointIdx","savedList","stringify","some","item","saveLists","forEach","filter","fontSize","fontWeight","onClick","newId","addedList","concat","addList","deletedList","includes","deleteList","index","Accordion","marginTop","AccordionSummary","expandIcon","aria-label","aria-controls","FormControlLabel","event","stopPropagation","onFocus","control","Checkbox","checked","e","parseInt","target","i","label","onChange","display","Chip","padding","color","background","marginLeft","Math","floor","AccordionDetails","Typography","component","justifyContent","marginBottom","marginRight","Slider","defaultValue","aria-labelledby","step","valueLabelDisplay","_","n","TextField","type","replace","InputLabelProps","shrink","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1c39bc53.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sea-lion.2f163542.svg\";","const sampleTodoData = (id: number, category: string, locale: string) => {\n    return [{\n        id: id,\n        title: \"sample title\",\n        description: \"sample description\",\n        dead_line: new Date( \n                new Date().setDate(\n                    new Date().getDate()+7\n                )\n            ).toLocaleString(locale)\n            .split(\" \")\n            .map((block,idx) => {\n                if (idx===0) {\n                    return block\n                        .split(\"/\")\n                        .map(s => {\n                            return s.length===1 ? \"0\"+s : s;\n                        } )\n                        .join(\"/\");\n                } else {\n                    return block\n                        .split(\":\")\n                        .map(s => {\n                            return s.length===1 ? \"0\"+s : s;\n                        } )\n                        .join(\":\");\n                }\n            } )\n            .join(\" \"),\n        degree: \"LOW\",\n        project_id: \"\",\n        completeness: 0,\n        category: category,\n        created: new Date().toLocaleString(locale)\n    }];\n};\n\nexport default sampleTodoData;\n","import React from 'react';\nimport svg from './../../sea-lion.svg';\n\nconst TodoIcon = (props) => {\n    return <img style={{height: props.height, width: props.width}} src={svg} alt=\"\" />;\n};\n\nexport default TodoIcon;\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport GolfCourseIcon from '@material-ui/icons/GolfCourse';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Slider from '@material-ui/core/Slider';\nimport TextField from '@material-ui/core/TextField';\n\n// atoms components\n// import Container from '../atoms/Container';\n// import Matrix from '../atoms/Matrix';\n\n// organisms components\n// import CrownHead from '../organisms/CrownHead';\n\n// modules\nimport sampleTodoData from '../../modules/sampleTodoData';\n\n// TODO test (styled-components bug?)\n// import Crown from '../atoms/Crown';\n// import Centerizer from '../atoms/Centerizer';\n// import Title from '../atoms/Title';\nimport TodoIcon from '../atoms/TodoIcon';\n\n// TODO vh\n// TODO component分ける\n// TODO Error Handling\n// TODO typescript\n// TODO Alert\n\nfunction App() {\n    const locale = window.navigator.language;\n    const todoDatas = localStorage.todoDatas && JSON.parse(localStorage.todoDatas).length!==0 ?\n        JSON.parse(localStorage.todoDatas) : sampleTodoData(1, \"TODO\", locale);\n\n    // useState Defined\n    const [list, setList] = useState(todoDatas);\n    const [choiced, setChoice] = useState<number[]>([]);\n\n    // Around List Functions\n    const addList = (category) => {\n        const newId = list.length!==0 ? list[list.length-1].id + 1 : 1;\n        const addedList = list.concat(sampleTodoData(newId, category, locale));\n        localStorage.todoDatas = JSON.stringify(addedList);\n        return addedList;\n    };\n\n    const deleteList = () => {\n        const deletedList = list.filter((item)=>!choiced.includes(item.id));\n        localStorage.todoDatas = JSON.stringify(deletedList);\n        return deletedList;\n    };\n\n    const saveList = (key, value, id) => {\n        const savedList = JSON.parse(JSON.stringify(list));\n        let pointIdx;\n        savedList.some((item, idx)=>{\n            if (item.id===id) {\n                pointIdx = idx;\n                return true;\n            }\n            return false;\n        });\n        if (value===\"PROGRESS\" && savedList[pointIdx][key]!==\"TODO\") return savedList;\n        if (value===\"DONE\" && savedList[pointIdx][key]!==\"PROGRESS\") return savedList;\n        savedList[pointIdx][key] = value;\n        localStorage.todoDatas = JSON.stringify(savedList);\n        return savedList;\n    };\n\n    const saveLists = (key, value, choiced) => {\n        const savedList = JSON.parse(JSON.stringify(list));\n        choiced.forEach(id=>{\n            let pointIdx;\n            savedList.some((item, idx)=>{\n                if (item.id===id) {\n                    pointIdx = idx;\n                    return true;\n                }\n                return false;\n            });\n            if (value===\"PROGRESS\" && savedList[pointIdx][key]!==\"TODO\") return;\n            if (value===\"DONE\" && savedList[pointIdx][key]!==\"PROGRESS\") return;\n            savedList[pointIdx][key] = value;\n        });\n        localStorage.todoDatas = JSON.stringify(savedList);\n        return savedList;\n    };\n\n    return (\n        <div>\n            {/* TODO TEST <CrownHead />*/}\n            <Crown>\n                <Centerizer>\n                    <TodoIcon height={\"7.5vh\"} width={\"5vh\"} />\n                    <Title>todo</Title>\n                </Centerizer>\n            </Crown>\n            {/*TEST*/}\n            <Container>\n                <Flexy>\n                    {[\"TODO\", \"PROGRESS\", \"DONE\"].map((category) => {\n                        return (\n                            <MatrixCrown key={`mtc-${category}`}>\n                                <Flex>\n                                    <NumEye>\n                                        {list.filter(item=>item.category===category).length}\n                                    </NumEye>\n                                    <div style={{fontSize:\"2vh\",fontWeight:\"bold\"}}>{category}</div>\n                                </Flex>\n                                <Flex>\n                                    <AddIcon onClick={()=>{ setList(addList(category)); }} />\n                                    <DeleteIcon\n                                        onClick={()=>{\n                                            setList(deleteList());\n                                            setChoice([]);\n                                        }}\n                                    />\n                                    {category===\"TODO\" && (\n                                        <FitnessCenterIcon\n                                            onClick={()=>{\n                                                setList(saveLists(\"category\",\"PROGRESS\",choiced));\n                                                setChoice([]);\n                                            }} \n                                        />\n                                    )}\n                                    {category===\"PROGRESS\" && (\n                                        <GolfCourseIcon\n                                            onClick={()=>{\n                                                setList(saveLists(\"category\",\"DONE\",choiced));\n                                                setChoice([]);\n                                            }}\n                                        />\n                                    )}\n                                </Flex>\n                            </MatrixCrown>\n                        );\n                    })}\n                </Flexy>\n                <Flexy>\n                    {[\"TODO\", \"PROGRESS\", \"DONE\"].map((category) => {\n                        return (\n                            <Matrix key={`mt-${category}`}>\n                                {list.filter(item=>item.category===category).map((item, index)=>{\n                                    return (\n                                        <Accordion key={`ac-${index}-${item}`} style={{marginTop: \"1vh\"}}>\n                                            <AccordionSummary\n                                              expandIcon={<ExpandMoreIcon />}\n                                              aria-label=\"Expand\"\n                                              aria-controls=\"additional-actions1-content\"\n                                              id=\"additional-actions1-header\"\n                                            >\n                                                <FormControlLabel\n                                                    aria-label=\"Acknowledge\"\n                                                    onClick={(event) => event.stopPropagation()}\n                                                    onFocus={(event) => event.stopPropagation()}\n                                                    control={\n                                                        <Checkbox\n                                                            value={item.id}\n                                                            checked={choiced.includes(item.id)}\n                                                            onClick={(e)=>{\n                                                                const id = parseInt((e.target as HTMLInputElement).value);\n                                                                if (choiced.includes(id)) {\n                                                                    setChoice(choiced.filter(i=>i!==id));\n                                                                } else {\n                                                                    setChoice(choiced.concat([id]));\n                                                                }\n                                                            }}\n                                                        />\n                                                    }\n                                                    label={\n                                                        <TitleInput\n                                                            value={item.title}\n                                                            onChange={(e)=>{\n                                                                const value = e.target.value;\n                                                                setList(saveList(\"title\", value, item.id));\n                                                            }}\n                                                        />\n                                                    }\n                                                />\n                                                <div style={{display:\"flex\"}}>\n                                                    <Chip style={{height: \"3vh\", padding:\"0\", marginTop: \"0.5vh\", color:\"white\",\n                                                        background: item.degree===\"CRITICAL\"?\"red\":(item.degree===\"HIGH\"?\"orange\":(item.degree===\"MEDIUM\"?\"green\":(item.degree===\"PENDING\"?\"indigo\":\"blue\")))\n                                                    }} label={item.degree} />\n                                                    <Chip style={{\n                                                            height: \"3vh\",\n                                                            marginTop:\"0.5vh\",\n                                                            marginLeft:\"0.5vh\",\n                                                            color:\"white\",\n                                                            background: `rgba(${Math.floor(255-255*parseInt(item.completeness)/100)},0,${Math.floor(255*parseInt(item.completeness)/100)},1)`\n                                                        }}\n                                                        label={item.completeness+\"%\"}\n                                                    />\n                                                    <Chip\n                                                        style={{height: \"3vh\", marginTop:\"0.5vh\", marginLeft:\"0.5vh\"}}\n                                                        label={new Date((new Date(item.dead_line) as any) - (new Date() as any)).getDate()-1+\"days\"}\n                                                    />\n                                                </div>\n                                            </AccordionSummary>\n                                            <AccordionDetails>\n                                                <Typography component={'div'} color=\"textSecondary\">\n                                                    <DescriptionInput\n                                                        value={item.description}\n                                                        onChange={(e)=>{\n                                                            const value = e.target.value;\n                                                            setList(saveList(\"description\", value, item.id));\n                                                        }}\n                                                    />\n                                                    <div style={{display:\"flex\", justifyContent:\"space-between\", marginBottom:\"2vh\"}}>\n                                                        <div style={{marginRight:\"1vh\",color:\"black\"}}>Completeness:</div>\n                                                        <GolfCourseIcon style={{marginRight:\"2vh\"}}/>\n                                                        <Slider\n                                                            defaultValue={item.completeness}\n                                                            aria-labelledby=\"discrete-slider-always\"\n                                                            step={1}\n                                                            valueLabelDisplay=\"on\"\n                                                            onChange={(_, n)=>{\n                                                                setList(saveList(\"completeness\", n, item.id));\n                                                            }}\n                                                        />\n                                                        <div style={{marginLeft:\"2vh\", width:\"5vh\", color:\"black\"}}>[%]</div>\n                                                    </div>\n                                                    {[\"LOW\",\"MEDIUM\",\"HIGH\",\"CRITICAL\",\"PENDING\"].map(degree => {\n                                                        return (\n                                                            <Chip key={`ch-${degree}`} label={degree} style={{\n                                                                color:item.degree!==degree?\"rgba(0,0,0,0.87)\":\"white\",\n                                                                background: item.degree!==degree?\"#e0e0e0\":(degree===\"CRITICAL\"?\"red\":(degree===\"HIGH\"?\"orange\":(degree===\"MEDIUM\"?\"green\":(degree===\"PENDING\"?\"indigo\":\"blue\"))))\n                                                                }}\n                                                                onClick={()=>{\n                                                                    setList(saveList(\"degree\", degree, item.id));\n                                                                }}\n                                                            />\n                                                        );\n                                                    })}\n                                                    <form>\n                                                        <TextField\n                                                            label={<div style={{color:\"black\"}}>Dead Line</div>}\n                                                            type=\"datetime-local\"\n                                                            style={{marginTop:\"2vh\"}}\n                                                            defaultValue={item.dead_line.replace(/\\//g,\"-\").replace(\" \",\"T\")}\n                                                            InputLabelProps={{\n                                                                shrink: true,\n                                                            }}\n                                                            onChange={(e)=>{\n                                                                const value = e.target.value.replace(/-/g,\"/\").replace(\"T\",\" \");\n                                                                setList(saveList(\"dead_line\", value, item.id));\n                                                            }}\n                                                        />\n                                                    </form>\n                                                </Typography>\n                                            </AccordionDetails>\n                                        </Accordion>\n                                    );\n                                })}\n                            </Matrix>\n                        );\n                    })}\n                </Flexy>\n            </Container>\n        </div>\n    );\n}\n\nconst TitleInput = styled.input`\n    outline: none;\n    border: none;\n    font-size: 1.5vh;\n    resize: none;\n    color: black;\n    font-weight: bold;\n    width: 100%;\n    margin-right: 5vh;\n`;\n\nconst DescriptionInput = styled.textarea`\n    margin-bottom: 5vh;\n    outline: none;\n    display: block;\n    border: none;\n    font-size: 1.5vh;\n    width: 25vw;\n    resize: none;\n`;\n\nconst MatrixCrown = styled.div`\n    display: flex;\n    overflow: scroll;\n    justify-content: space-between;\n    height: 7.5vh;\n    padding: 4vh 4vh 0 4vh;\n    width: calc((90vw - 20vh) / 3);\n    line-height: 3.5vh;\n    background: lightsteelblue;\n    border: solid 1px darkslategray;\n    border-radius: 0.5vh 0.5vh 0 0;\n    border-bottom: none;\n`;\n\nconst NumEye = styled.div`\n    margin-right: 1vw;\n    height: 3.5vh;\n    width: 3.5vh;\n    text-align: center;\n    border-radius: 40%;\n    color: white;\n    background: indianred;\n`;\n\nconst Flex = styled.div`\n    display: flex;\n`;\n\nconst Flexy = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst Crown = styled.div`\n    position: fixed;\n    top: 0;\n    width: 100vw;\n    @import url('https://fonts.googleapis.com/css2?family=Ranchers&display=swap');\n    font-family: 'Ranchers', cursive;\n    font-weight: bold;\n    padding: 0;\n    display: flex;\n    font-size: 4vh;\n    color: snow;\n    user-select: none;\n    text-align: center;\n    background: royalblue;\n`;\n\nconst Centerizer = styled.div`\n    left: 0;\n    right: 0;\n    margin: auto;\n    width: auto;\n    display: flex;\n`;\n\nconst Title = styled.div`\n    margin-left: 1vh;\n    height: 7.5vh;\n    line-height: 7.5vh;\n`;\n\nconst Container = styled.div`\n    background: lightcyan;\n    min-width: calc(100vw - 10vh);\n    overflow-x: scroll;\n    height: 82.5vh;\n    margin-top: 7.5vh;\n    padding: 5vh;\n    overflow-y: scroll;\n`;\n\nconst Matrix = styled.div`\n    padding: 4vh;\n    padding-top: 1vh;\n    height: 65vh;\n    border: solid 1px darkslategray;\n    border-top: none;\n    background: lightsteelblue;\n    overflow-y: scroll;\n    width: calc((90vw - 20vh) / 3);\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/pages/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}