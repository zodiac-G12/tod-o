{"version":3,"sources":["sea-lion.svg","components/atoms/Flexy.tsx","components/atoms/Container.tsx","components/atoms/Crown.tsx","components/atoms/Centerizer.tsx","components/atoms/Title.tsx","components/atoms/TodoIcon.tsx","components/organisms/CrownHead.tsx","components/atoms/Flex.tsx","components/atoms/MatrixCrownContainer.tsx","components/atoms/NumEye.tsx","components/molecules/NumCat.tsx","components/molecules/ActionIcons.tsx","components/organisms/MatrixCrown.tsx","components/atoms/MatrixContainer.tsx","components/atoms/TitleInput.tsx","components/atoms/DescriptionTextarea.tsx","components/atoms/OriginalLi.tsx","components/atoms/OriginalUl.tsx","components/organisms/Matrix.tsx","modules/sampleTodoData.ts","modules/listFunctions.ts","components/pages/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Flexy","styled","div","Container","Crown","Centerizer","Title","TodoIcon","props","style","height","width","src","svg","alt","CrownHead","Flex","MatrixCrownContainer","NumEye","NumCat","list","filter","item","category","length","fontSize","fontWeight","ActionIcons","onClick","setList","addList","deleteList","choiced","setChoice","saveLists","MatrixCrown","key","MatrixContainer","TitleInput","input","DescriptionTextarea","textarea","OriginalLi","li","OriginalUl","ul","degrees","degreeToColorMap","CRITICAL","HIGH","MEDIUM","PENDING","LOW","DragHandle","SortableHandle","ListItemIcon","SortableItem","SortableElement","tabIndex","Accordion","index","id","marginTop","AccordionSummary","expandIcon","aria-label","aria-controls","FormControlLabel","event","stopPropagation","onFocus","control","Checkbox","value","checked","includes","e","parseInt","target","i","concat","label","title","onChange","saveList","Chip","marginLeft","padding","color","background","degree","Math","floor","completeness","Date","dead_line","getDate","ListItemSecondaryAction","AccordionDetails","Typography","component","description","marginBottom","marginRight","Slider","defaultValue","aria-labelledby","step","valueLabelDisplay","_","n","Array","isArray","map","TextField","type","replace","InputLabelProps","shrink","SortableList","SortableContainer","collection","Matrix","useState","categorizedList","setCategorizedList","onSortEnd","oldIndex","newIndex","arrayMove","exchangeList","useDragHandle","lookAxis","sampleTodoDataFunc","locale","window","navigator","language","setDate","toLocaleString","split","block","idx","s","join","project_id","created","id1","id2","pointIdx1","pointIdx2","savedList","JSON","parse","stringify","some","item1","item2","localStorage","todoDatas","newId","addedList","deletedList","pointIdx","forEach","App","categories","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.60e74d25.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sea-lion.2f163542.svg\";","import styled from '@emotion/styled';\n\nconst Flexy = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport default Flexy;\n","// import styled from 'styled-components';\nimport styled from '@emotion/styled';\n\nconst Container = styled.div`\n    background: lightcyan;\n    min-width: calc(100vw - 10vh);\n    overflow-x: scroll;\n    height: 82.5vh;\n    margin-top: 7.5vh;\n    padding: 5vh;\n    overflow-y: scroll;\n`;\n\nexport default Container;\n","// import styled from 'styled-components';\nimport styled from '@emotion/styled';\n\nconst Crown = styled.div`\n    position: fixed;\n    top: 0;\n    width: 100vw;\n    @import url('https://fonts.googleapis.com/css2?family=Ranchers&display=swap');\n    font-family: 'Ranchers', cursive;\n    font-weight: bold;\n    padding: 0;\n    display: flex;\n    font-size: 4vh;\n    color: snow;\n    user-select: none;\n    text-align: center;\n    background: royalblue;\n`;\n\nexport default Crown;\n","// import styled from 'styled-components';\nimport styled from '@emotion/styled';\n\nconst Centerizer = styled.div`\n    left: 0;\n    right: 0;\n    margin: auto;\n    width: auto;\n    display: flex;\n`;\n\nexport default Centerizer;\n","// import styled from 'styled-components';\nimport styled from '@emotion/styled';\n\nconst Title = styled.div`\n    margin-left: 1vh;\n    height: 7.5vh;\n    line-height: 7.5vh;\n`;\n\nexport default Title;\n","import React from 'react';\nimport svg from './../../sea-lion.svg';\n\nconst TodoIcon = (props) => {\n    return <img style={{height: props.height, width: props.width}} src={svg} alt=\"\" />;\n};\n\nexport default TodoIcon;\n","import React from 'react';\n\n// atoms components\nimport Crown from '../atoms/Crown';\nimport Centerizer from '../atoms/Centerizer';\nimport Title from '../atoms/Title';\nimport TodoIcon from '../atoms/TodoIcon';\n\nconst CrownHead = () => {\n    return (\n        <Crown>\n            <Centerizer>\n                <TodoIcon height={\"7.5vh\"} width={\"5vh\"} />\n                <Title>todo</Title>\n            </Centerizer>\n        </Crown>\n    );\n};\n\nexport default CrownHead;\n","import styled from '@emotion/styled';\n\nconst Flex = styled.div`\n    display: flex;\n`;\n\nexport default Flex;\n","import styled from '@emotion/styled';\n\nconst MatrixCrownContainer = styled.div`\n    display: flex;\n    overflow: scroll;\n    justify-content: space-between;\n    height: 7.5vh;\n    padding: 4vh 4vh 0 4vh;\n    width: calc((90vw - 20vh) / 3);\n    lineHeight: 3.5vh;\n    background: lightsteelblue;\n    border: solid 1px darkslategray;\n    border-radius: 0.5vh 0.5vh 0 0;\n    border-bottom: none;\n`;\n\nexport default MatrixCrownContainer;\n","import styled from '@emotion/styled';\n\nconst NumEye = styled.div`\n    margin-right: 1vw;\n    height: 3.5vh;\n    width: 3.5vh;\n    margin-top: -0.5vh;\n    line-height: 3.5vh;\n    text-align: center;\n    border-radius: 40%;\n    color: white;\n    background: indianred;\n`;\n\nexport default NumEye;\n","import React from 'react';\n\nimport NumEye from '../atoms/NumEye';\n\nconst NumCat = (props) => {\n    return (\n        <>\n            <NumEye>\n                {props.list.filter(item=>item.category===props.category).length}\n            </NumEye>\n            <div style={{fontSize:\"2vh\", fontWeight:\"bold\"}}>{props.category}</div>\n        </>\n    );\n};\n\nexport default NumCat;\n","import React from 'react';\n\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport GolfCourseIcon from '@material-ui/icons/GolfCourse';\n\nconst ActionIcons = (props) => {\n    return (\n        <>\n            <AddIcon onClick={()=>{ props.setList(props.addList(props.category, props.list)); }} />\n            <DeleteIcon\n                onClick={()=>{\n                    props.setList(props.deleteList(props.choiced, props.list));\n                    props.setChoice([]);\n                }}\n            />\n            {props.category===\"TODO\" && (\n                <FitnessCenterIcon\n                    onClick={()=>{\n                        props.setList(props.saveLists(\"category\", \"PROGRESS\", props.choiced, props.list));\n                        props.setChoice([]);\n                    }} \n                />\n            )}\n            {props.category===\"PROGRESS\" && (\n                <GolfCourseIcon\n                    onClick={()=>{\n                        props.setList(props.saveLists(\"category\", \"DONE\", props.choiced, props.list));\n                        props.setChoice([]);\n                    }}\n                />\n            )}\n        </>\n    );\n};\n\nexport default ActionIcons;\n","import React from 'react';\n\n// atoms components\nimport Flex from '../atoms/Flex';\nimport MatrixCrownContainer from '../atoms/MatrixCrownContainer';\n\n// molecules components\nimport NumCat from '../molecules/NumCat';\nimport ActionIcons from '../molecules/ActionIcons';\n\nconst MatrixCrown = (props) => {\n    return (\n        <MatrixCrownContainer>\n            <Flex key={`mtc-${props.category}-0-flex`}>\n                <NumCat list={props.list} category={props.category} />\n            </Flex>\n            <Flex key={`mtc-${props.category}-1-flex`}>\n                <ActionIcons\n                    list={props.list}\n                    choiced={props.choiced}\n                    category={props.category}\n                    setList={props.setList}\n                    setChoice={props.setChoice}\n                    addList={props.addList}\n                    deleteList={props.deleteList}\n                    saveLists={props.saveLists}\n                />\n            </Flex>\n        </MatrixCrownContainer>\n    );\n};\n\nexport default MatrixCrown;\n","// import styled from 'styled-components';\nimport styled from '@emotion/styled';\n\nconst MatrixContainer = styled.div`\n    padding: 4vh;\n    padding-top: 1vh;\n    height: 65vh;\n    border: solid 1px darkslategray;\n    border-top: none;\n    background: lightsteelblue;\n    overflow-y: scroll;\n    width: calc((90vw - 20vh) / 3);\n`;\n\nexport default MatrixContainer;\n","import styled from '@emotion/styled';\n\nconst TitleInput = styled.input`\n    outline: none;\n    border: none;\n    font-size: 1.5vh;\n    resize: none;\n    color: black;\n    font-weight: bold;\n    width: 70%;\n    margin-right: 5vh;\n`;\n\nexport default TitleInput;\n","import styled from '@emotion/styled';\n\nconst DescriptionTextarea = styled.textarea`\n    margin-bottom: 5vh;\n    outline: none;\n    display: block;\n    border: none;\n    font-size: 1.5vh;\n    width: 25vw;\n    resize: none;\n`;\n\nexport default DescriptionTextarea;\n","import styled from '@emotion/styled';\n\nconst OriginalLi = styled.li`\n    list-style: none;\n`;\n\nexport default OriginalLi;\n","import styled from '@emotion/styled';\n\nconst OriginalUl = styled.ul`\n    list-style: none;\n    padding-left: 0;\n`;\n\nexport default OriginalUl;\n","import React, {useState} from 'react';\n\n// dnd\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\n// material-ui components for dnd\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\n\n// material-ui components\nimport GolfCourseIcon from '@material-ui/icons/GolfCourse';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Slider from '@material-ui/core/Slider';\nimport TextField from '@material-ui/core/TextField';\n\n// atoms components\nimport MatrixContainer from '../atoms/MatrixContainer';\nimport Flex from '../atoms/Flex';\nimport Flexy from '../atoms/Flexy';\nimport TitleInput from '../atoms/TitleInput';\nimport DescriptionTextarea from '../atoms/DescriptionTextarea';\nimport OriginalLi from '../atoms/OriginalLi';\nimport OriginalUl from '../atoms/OriginalUl';\n\nconst degrees = [\"LOW\", \"MEDIUM\", \"HIGH\", \"CRITICAL\", \"PENDING\"];\nconst degreeToColorMap = {CRITICAL: \"red\", HIGH: \"orange\", MEDIUM: \"green\", PENDING: \"indigo\", LOW: \"blue\"};\n\nconst DragHandle = SortableHandle(() => (\n    <ListItemIcon>\n        <DragHandleIcon />\n    </ListItemIcon>\n));\n\nconst SortableItem = SortableElement((props) => (\n    <OriginalLi tabIndex={0}>\n        <Accordion key={`ac-${props.index}-${props.item.id}`} style={{marginTop: \"1vh\"}}>\n            <AccordionSummary\n                expandIcon={ <ExpandMoreIcon /> }\n                aria-label=\"Expand\"\n                aria-controls=\"additional-actions1-content\"\n                id=\"additional-actions1-header\"\n            >\n                <FormControlLabel\n                    aria-label=\"Acknowledge\"\n                    onClick={(event) => event.stopPropagation()}\n                    onFocus={(event) => event.stopPropagation()}\n                    control={\n                        <Checkbox\n                            value={props.item.id}\n                            checked={props.choiced.includes(props.item.id)}\n                            onClick={(e)=>{\n                                const id = parseInt((e.target as HTMLInputElement).value);\n                                if (props.choiced.includes(id)) {\n                                    props.setChoice(props.choiced.filter(i=>i!==id));\n                                } else {\n                                    props.setChoice(props.choiced.concat([id]));\n                                }\n                            }}\n                        />\n                    }\n                    label={\n                        <TitleInput\n                            value={props.item.title}\n                            onChange={(e)=>{\n                                const value = e.target.value;\n                                props.setList(props.saveList(\"title\", value, props.item.id, props.list));\n                            }}\n                        />\n                    }\n                />\n                <Flex>\n                    <Chip style={{marginLeft: \"-7vh\", height: \"3vh\", padding:\"0\", marginTop: \"0.5vh\", color:\"white\",\n                        background: degreeToColorMap[props.item.degree]\n                    }} label={props.item.degree} />\n                    <Chip style={{\n                            height: \"3vh\",\n                            marginTop:\"0.5vh\",\n                            marginLeft:\"0.5vh\",\n                            color:\"white\",\n                            background: `rgba(${Math.floor(255-255*parseInt(props.item.completeness)/100)},0,${Math.floor(255*parseInt(props.item.completeness)/100)},1)`\n                        }}\n                        label={props.item.completeness+\"%\"}\n                    />\n                    <Chip\n                        style={{height: \"3vh\", marginTop:\"0.5vh\", marginLeft:\"0.5vh\"}}\n                        label={new Date((new Date(props.item.dead_line) as any) - (new Date() as any)).getDate()-1+\"days\"}\n                    />\n                    <ListItemSecondaryAction>\n                        <DragHandle />\n                    </ListItemSecondaryAction>\n                </Flex>\n            </AccordionSummary>\n            <AccordionDetails>\n                <Typography component={'div'} color=\"textSecondary\">\n                    <DescriptionTextarea\n                        value={props.item.description}\n                        onChange={(e)=>{\n                            const value = e.target.value;\n                            props.setList(props.saveList(\"description\", value, props.item.id, props.list));\n                        }}\n                    />\n                    <Flexy style={{marginBottom:\"2vh\"}}>\n                        <div style={{marginRight:\"1vh\",color:\"black\"}}>Completeness:</div>\n                        <GolfCourseIcon style={{marginRight:\"2vh\"}}/>\n                        <Slider\n                            defaultValue={props.item.completeness}\n                            aria-labelledby=\"discrete-slider-always\"\n                            step={1}\n                            valueLabelDisplay=\"on\"\n                            onChange={(_, n)=>{\n                                if(Array.isArray(n)) return;\n                                if(n!==0 && !n) return;\n                                props.setList(props.saveList(\"completeness\", n, props.item.id, props.list));\n                            }}\n                        />\n                        <div style={{marginLeft:\"2vh\", width:\"5vh\", color:\"black\"}}>[%]</div>\n                    </Flexy>\n                    {degrees.map(degree => {\n                        return (\n                            <Chip key={`ch-${degree}`} label={degree} style={{\n                                color: props.item.degree!==degree?\"rgba(0,0,0,0.87)\":\"white\",\n                                background: props.item.degree!==degree?\"#e0e0e0\": degreeToColorMap[props.item.degree]\n                                }}\n                                onClick={()=>{\n                                    props.setList(props.saveList(\"degree\", degree, props.item.id, props.list));\n                                }}\n                            />\n                        );\n                    })}\n                    <form>\n                        <TextField\n                            label={<div style={{color:\"black\"}}>Dead Line</div>}\n                            type=\"datetime-local\"\n                            style={{marginTop:\"2vh\"}}\n                            defaultValue={props.item.dead_line.replace(/\\//g,\"-\").replace(\" \",\"T\")}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={(e)=>{\n                                const value = e.target.value.replace(/-/g,\"/\").replace(\"T\",\" \");\n                                props.setList(props.saveList(\"dead_line\", value, props.item.id, props.list));\n                            }}\n                        />\n                    </form>\n                </Typography>\n            </AccordionDetails>\n        </Accordion>\n    </OriginalLi>\n));\n\nconst SortableList = SortableContainer((props) => {\n    return (\n        <OriginalUl>\n            {props.list.filter(item=>item.category===props.category).map((item, index) => (\n                <SortableItem\n                    key={`item-${index}`}\n                    collection={props.category}\n                    index={index}\n                    item={item}\n                    list={props.list}\n                    category={props.category}\n                    choiced={props.choiced}\n                    setList={props.setList}\n                    setChoice={props.setChoice}\n                    saveList={props.saveList}\n                />\n            ))}\n        </OriginalUl>\n    );\n});\n \nconst Matrix = (props) => {\n    const [categorizedList, setCategorizedList] = useState(props.list.filter(item=>item.category===props.category));\n\n    const onSortEnd = ({oldIndex, newIndex, collection}) => {\n        setCategorizedList( arrayMove(categorizedList, oldIndex, newIndex) );\n        props.setList( props.exchangeList(categorizedList[oldIndex].id, categorizedList[newIndex].id, props.list) );\n    };\n\n    return (\n        <MatrixContainer>\n            <SortableList\n                categorizedList={categorizedList}\n\n                onSortEnd={onSortEnd}\n                useDragHandle={true}\n                lookAxis=\"y\"\n\n                list={props.list}\n                category={props.category}\n                choiced={props.choiced}\n                setList={props.setList}\n                setChoice={props.setChoice}\n                saveList={props.saveList}\n            />\n        </MatrixContainer>\n    );\n};\n\nexport default Matrix;\n","type ListItem = {\n    id: number,\n    title: string,\n    description: string,\n    dead_line: string,\n    degree: string,\n    project_id: string,\n    completeness: number,\n    category: string,\n    created: string\n};\n\ntype List = ListItem[];\n\nexport const sampleTodoDataFunc = (id: number, category: string): List => {\n    const locale = window.navigator.language;\n\n    return [{\n        id: id,\n        title: \"sample title\",\n        description: \"sample description\",\n        dead_line: new Date( \n                new Date().setDate(\n                    new Date().getDate()+7\n                )\n            ).toLocaleString(locale)\n            .split(\" \")\n            .map((block,idx) => {\n                if (idx===0) {\n                    return block\n                        .split(\"/\")\n                        .map(s => {\n                            return s.length===1 ? \"0\"+s : s;\n                        } )\n                        .join(\"/\");\n                } else {\n                    return block\n                        .split(\":\")\n                        .map(s => {\n                            return s.length===1 ? \"0\"+s : s;\n                        } )\n                        .join(\":\");\n                }\n            } )\n            .join(\" \"),\n        degree: \"LOW\",\n        project_id: \"\",\n        completeness: 0,\n        category: category,\n        created: new Date().toLocaleString(locale)\n    }];\n};\n","import { sampleTodoDataFunc } from './sampleTodoData';\n\ntype ListItem = {\n    id: number,\n    title: string,\n    description: string,\n    dead_line: string,\n    degree: string,\n    project_id: string,\n    completeness: number,\n    category: string,\n    created: string\n};\n\ntype List = ListItem[];\n\n// Around List Functions\nexport const exchangeList = (id1: number, id2: number, list: List): List => {\n    const savedList = JSON.parse(JSON.stringify(list));\n    let pointIdx1: number|undefined,\n        pointIdx2: number|undefined;\n\n    if (id1 === id2) return savedList;\n\n    // absolutely exist \"idx\"\n    savedList.some((item: ListItem, idx: number)=>{\n        if (item.id===id1) {\n            pointIdx1 = idx;\n            return true;\n        }\n        return false;\n    });\n    if (pointIdx1 !== 0 && !pointIdx1) return savedList;\n\n    // absolutely exist \"idx\"\n    savedList.some((item: ListItem, idx: number)=>{\n        if (item.id===id2) {\n            pointIdx2 = idx;\n            return true;\n        }\n        return false;\n    });\n    if (pointIdx2 !== 0 && !pointIdx2) return savedList;\n\n    const item1 = savedList[pointIdx1],\n          item2 = savedList[pointIdx2];\n\n    savedList[pointIdx2] = item1;\n    savedList[pointIdx1] = item2;\n\n    localStorage.todoDatas = JSON.stringify(savedList);\n    return savedList;\n}\n\nexport const addList = (category: string, list: List): List => {\n    const newId = list.length!==0 ? list[list.length-1].id + 1 : 1;\n    const addedList = list.concat(sampleTodoDataFunc(newId, category));\n    localStorage.todoDatas = JSON.stringify(addedList);\n    return addedList;\n};\n\nexport const deleteList = (choiced: number[], list: List): List => {\n    const deletedList = list.filter((item)=>!choiced.includes(item.id));\n    localStorage.todoDatas = JSON.stringify(deletedList);\n    return deletedList;\n};\n\nexport const saveList = (key: string, value: string|number, id: number, list: List): List => {\n    const savedList = JSON.parse(JSON.stringify(list));\n    let pointIdx: number|undefined;\n    // absolutely exist \"idx\"\n    savedList.some((item: ListItem, idx: number)=>{\n        if (item.id===id) {\n            pointIdx = idx;\n            return true;\n        }\n        return false;\n    });\n    if (pointIdx !== 0 && !pointIdx) return savedList;\n    if (value===\"PROGRESS\" && savedList[pointIdx][key]!==\"TODO\") return savedList;\n    if (value===\"DONE\" && savedList[pointIdx][key]!==\"PROGRESS\") return savedList;\n    savedList[pointIdx][key] = value;\n    localStorage.todoDatas = JSON.stringify(savedList);\n    return savedList;\n};\n\nexport const saveLists = (key: string, value: string|number, choiced: number[], list: List): List => {\n    const savedList = JSON.parse(JSON.stringify(list));\n    choiced.forEach(id=>{\n        let pointIdx: number|undefined;\n        savedList.some((item: ListItem, idx: number)=>{\n            if (item.id===id) {\n                pointIdx = idx;\n                return true;\n            }\n            return false;\n        });\n        if (pointIdx !== 0 && !pointIdx) return;\n        if (value===\"PROGRESS\" && savedList[pointIdx][key]!==\"TODO\") return;\n        if (value===\"DONE\" && savedList[pointIdx][key]!==\"PROGRESS\") return;\n        savedList[pointIdx][key] = value;\n    });\n    localStorage.todoDatas = JSON.stringify(savedList);\n    return savedList;\n};\n","import React, { useState } from 'react';\n\n// atoms components\nimport Flexy from '../atoms/Flexy';\nimport Container from '../atoms/Container';\n\n// organisms components\nimport CrownHead from '../organisms/CrownHead';\nimport MatrixCrown from '../organisms/MatrixCrown';\nimport Matrix from '../organisms/Matrix';\n\n// modules\nimport { sampleTodoDataFunc } from '../../modules/sampleTodoData';\nimport { addList, deleteList, saveList, saveLists, exchangeList } from '../../modules/listFunctions';\n\n// TODO vh\n// TODO typescript\n// TODO Alert\n\nfunction App() {\n    const todoDatas = localStorage.todoDatas && JSON.parse(localStorage.todoDatas).length!==0 ?\n        JSON.parse(localStorage.todoDatas) : sampleTodoDataFunc(1, \"TODO\");\n\n    const categories = [\"TODO\", \"PROGRESS\", \"DONE\"];\n\n    // useState Defined\n    const [list, setList] = useState(todoDatas);\n    const [choiced, setChoice] = useState<number[]>([]);\n\n    return (\n        <>\n            <CrownHead />\n            <Container>\n                <Flexy>\n                    {categories.map((category) => {\n                        return (\n                            <MatrixCrown key={`mtc-${category}`}\n                                category={category}\n                                list={list}\n                                choiced={choiced}\n                                setList={setList}\n                                setChoice={setChoice}\n                                addList={addList}\n                                deleteList={deleteList}\n                                saveLists={saveLists}\n                            />\n                        );\n                    })}\n                </Flexy>\n                <Flexy>\n                    {categories.map((category) => {\n                        return (\n                            <Matrix key={`mt-${category}`}\n                                list={list}\n                                category={category}\n                                choiced={choiced}\n                                setList={setList}\n                                setChoice={setChoice}\n                                saveList={saveList}\n                                exchangeList={exchangeList}\n                            />\n                        );\n                    })}\n                </Flexy>\n            </Container>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/pages/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}